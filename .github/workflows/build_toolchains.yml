name: Build toolchains

on:
  push:

permissions:
  contents: read
  packages: write

env:
  DOCKER_BUILDKIT: 1

jobs:
  pre_job:
    name: Skip Duplicate Jobs Pre Job
    runs-on: ubuntu-latest
    permissions:
      actions: write  # Needed for skip-duplicate-jobs job
      contents: read
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@12aca0a884f6137d619d6a8a09fcc3406ced5281 # v4.0.0
        with:
          cancel_others: 'true'
          github_token: ${{ github.token }}

  build_toolchain:
    needs:
      - pre_job
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain:
          - { host: x86_64-unknown-linux-gnu, target: x86_64-unknown-linux-gnu }
          - { host: x86_64-unknown-linux-musl, target: x86_64-unknown-linux-musl }
          - { host: aarch64-unknown-linux-gnu, target: aarch64-unknown-linux-gnu }
          - { host: aarch64-unknown-linux-musl, target: aarch64-unknown-linux-musl }
          - { host: x86_64-unknown-linux-musl, target: aarch64-unknown-linux-musl }
          - { host: armv7-unknown-linux-gnueabihf, target: armv7-unknown-linux-gnueabihf }
          - { host: x86_64-unknown-linux-musl, target: armv7-unknown-linux-musleabihf }
          - { host: armv7-unknown-linux-musleabihf, target: armv7-unknown-linux-musleabihf }

    env:
      REGISTRY: ghcr.io
      TOOLCHAIN_NAME: ${{ matrix.toolchain.host }}-${{ matrix.toolchain.target }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2
        with:
          image: tonistiigi/binfmt:qemu-v6.2.0
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0
        with:
          driver-opts: |
            image=moby/buildkit:v0.11.6
            network=host 


      - name: Extract metadata (tags, labels) for Docker
        id: create_image_meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          tags: |
            type=sha,format=long,prefix=,enable=${{ github.ref_type == 'branch' }}
            type=ref,event=tag
          images: |
            name=${{ env.REGISTRY }}/${{ github.repository }}/dev/${{ env.TOOLCHAIN_NAME }},enable=${{ github.ref_type == 'branch' }}
            name=${{ env.REGISTRY }}/${{ github.repository }}/${{ env.TOOLCHAIN_NAME }},enable=${{ github.ref_type == 'tag' }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@715c25b40ccc0df9b62bfa8be3ccc57d09dbc4b1

      - name: Build
        run: bash build/build_toolchain.sh ${{ matrix.toolchain.host }} ${{ matrix.toolchain.target }}

#      - name: Build and push
#        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
#        with:
#          push: true
#          build-args: |
#            SAMPLE_NAME=${{ matrix.toolchains.sample_name }}
#          cache-from: type=gha,scope=toolchain-${{ matrix.toolchains.sample_name }}-2
#          cache-to: type=gha,mode=min,scope=toolchain-${{ matrix.toolchains.sample_name }}-2,mode=min
#          context: build/docker
#          tags: ${{ steps.create_image_meta.outputs.tags }}
#          labels: ${{ steps.create_image_meta.outputs.labels }}

#      - name: Build toolchain
#        if: steps.cache_toolchain.outputs.cache-hit != 'true'
#        run: |
#          bash build/build_toolchain.sh ${{ matrix.sample_name }}

#      - name: Save toolchains as artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: toolchains-${{ matrix.sample_name }}
#          path: ${{ matrix.sample_name }}-native.tar.gz
      
