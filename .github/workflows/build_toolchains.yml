name: Build toolchains

on:
  push:

permissions:
  contents: read
  packages: read|write

jobs:
  pre_job:
    name: Skip Duplicate Jobs Pre Job
    runs-on: ubuntu-latest
    permissions:
      actions: write  # Needed for skip-duplicate-jobs job
      contents: read
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@12aca0a884f6137d619d6a8a09fcc3406ced5281 # v4.0.0
        with:
          cancel_others: 'true'
          github_token: ${{ github.token }}

  build_toolchain:
    needs:
      - pre_job
    runs-on: ubuntu-latest

    strategy:
      matrix:
        sample_name:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf

    env:
      DOCKER_BUILDKIT: 1
      REGISTRY: ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2
        with:
          image: tonistiigi/binfmt:qemu-v6.2.0
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.0.0
        with:
          driver-opts: network=host
          
#      - name: Cache toolchains
#        id: cache_toolchain
#        uses: actions/cache@v3
#        with:
#          path: ${{ matrix.sample_name }}-*.tar.gz
#          key: ${{ matrix.sample_name }}-${{ hashFiles('build/**/*') }}


      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@715c25b40ccc0df9b62bfa8be3ccc57d09dbc4b1


      - name: Extract metadata (tags, labels) for Docker
        id: create_image_meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.sample_name }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          push: true
          build-args: |
            SAMPLE_NAME=${{ matrix.sample_name }}
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ matrix.sample_name }}-1
          cache-to: type=gha,mode=min,scope=${{ github.ref_name }}-${{ matrix.sample_name }}-1
          context: build/docker
          tags: ${{ steps.create_image_meta.outputs.tags }}
          labels: ${{ steps.create_image_meta.outputs.labels }}

#      - name: Build toolchain
#        if: steps.cache_toolchain.outputs.cache-hit != 'true'
#        run: |
#          bash build/build_toolchain.sh ${{ matrix.sample_name }}

#      - name: Save toolchains as artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: toolchains-${{ matrix.sample_name }}
#          path: ${{ matrix.sample_name }}-native.tar.gz
      
